version: '3'
services:
  ####################
  # Apache           #
  ####################

  ####################
  # Nginx            #
  ####################

  ####################
  # Web Framework    #
  ####################
  web:
    build:
      context: .
      dockerfile: ./docker/rails/Dockerfile
    container_name: web
    command: bundle exec rails s -p 3000 -b '0.0.0.0'
    environment:
      - "TZ=Japan"
    volumes:
      - ./src:/app
      - bundle-data:/usr/local/bundle
    ports:
      - "3000:3000"
    depends_on:
      - mysql
      - postgres

  web-django:
    build:
      context: .
      dockerfile: ./docker/python/Dockerfile
    container_name: web-django
    command: python3 manage.py runserver 0.0.0.0:8000
    environment:
      - "TZ=Japan"
    volumes:
      - .:/code
    ports:
      - "8000:8000"
    depends_on:
      - mysql
      - postgres

  ####################
  # MySQL            #
  ####################
  mysql:
    image: mysql:5.7
    container_name: mysql
    restart: always
    environment:
      MYSQL_ROOT_PASSWORD: password
    volumes:
      - ./tmp/db/mysql:/var/lib/mysql
    ports:
      - "3306:3306"

  mysql-gui:
    image: phpmyadmin/phpmyadmin
    container_name: mysql-gui
    environment:
      PMA_ARBITRARY: 1
      PMA_HOST: mysql
      PMA_USER: root
      PMA_PASSWORD: password
    restart: always
    links:
      - mysql:mysql
    ports:
      - "8888:80"
    volumes:
      - mysql-data:/path/to/data

  ####################
  # PostgreSQL       #
  ####################
  postgres:
    image: postgres
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
    ports:
      - "5432:5432"
    container_name: postgres-db
    volumes:
        - ./tmp/db/postgres:/path/to/data

  # pgweb:
  #   image: donnex/pgweb
  #   command: -s --bind=0.0.0.0 --listen=8080 --url postgresql://postgres@postgres/myapp_development?sslmode=disable
  #   links:
  #     - postgres:postgres
  #   ports:
  #     - "7000:8080"

  ####################
  # Oracle           #
  ####################

  ####################
  # MongoDB          #
  ####################
  # mongo:
  #   image: mongo
  #   container_name: mongo
  #   restart: always
  #   environment:
  #     MONGO_INITDB_ROOT_USERNAME: root
  #     MONGO_INITDB_ROOT_PASSWORD: root
  #   volumes:
  #     - ./tmp/db/mongo:/data/db
  # mongo-express:
  #   image: mongo-express
  #   container_name: mongo-express
  #   restart: always
  #   expose:
  #     - 8082
  #   ports:
  #     - 8082:8082
  #   environment:
  #     ME_CONFIG_MONGODB_ADMINUSERNAME: root
  #     ME_CONFIG_MONGODB_ADMINPASSWORD: root
  #     VCAP_APP_PORT: 8082

  ####################
  # Redis            #
  ####################
  # redis:
  #   image: redis
  #   container_name: redis

  # redisCommander:
  #   image: tenstartups/redis-commander
  #   container_name: redisCommander
  #   command: --redis-host redis
  #   links:
  #     - redis:redis
  #   ports:
  #     - "8081:8081"

  ####################
  # Adminer          #
  ####################
  adminer:
    image: dockette/adminer:full-php5
    restart: always
    ports:
        - 8084:80
  ####################
  # Anaconda         #
  ####################

  ####################
  # Jenkins          #
  ####################
  jenkins:
    image: jenkins
    ports:
      - "8080:8080"
    volumes:
      - ./tmp/jenkins:/var/jenkins_home

  ####################
  # AWS CLI          #
  ####################

  ####################
  # TRUFFLE          #
  ####################

  ####################
  # Zabbix           #
  ####################
  ####################
  # Nagios           #
  ####################
  ####################
  # Cloud9           #
  ####################
  # cloud9:
  #   build:
  #     context: .
  #     dockerfile: ./docker/cloud9/Dockerfile
  #   container_name: cloud9
  #   command: node /cloud9/server.js --port 9000 -w /workspace -l 0.0.0.0 --auth user:password
  #   ports:
  #     - "9000:9000"
  #   volumes:
  #     - ./src:/workspace
  #     - cloud9-data:/cloud9

volumes:
  bundle-data:
  mysql-data:
  postgres-data:
  redis-data:
  cloud9-data:
    driver: local